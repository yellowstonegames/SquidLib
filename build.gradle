buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        gradlePluginPortal()
    }
    dependencies {
        classpath 'com.vanniktech:gradle-maven-publish-plugin:0.14.2'
    }
}

apply plugin: 'java-library'
apply plugin: 'com.vanniktech.maven.publish'

def projectName = 'squidlib-parent'

version '3.0.5-SNAPSHOT'
group 'com.squidpony'

allprojects {
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

}

configure(subprojects) {
    apply plugin: 'java-library'
    apply plugin: 'com.vanniktech.maven.publish'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    compileJava {
        options.incremental = true
    }
}

subprojects {
	version = "$parent.version"
    group = parent.group
    ext.projectName = 'SquidLib'
	repositories {
		mavenLocal()
		mavenCentral()
		maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
		gradlePluginPortal()
	}
    compileJava.exclude("emu")
    javadoc.exclude("emu")
    javadoc.options.source("7")
    ((StandardJavadocDocletOptions)javadoc.options).linkSource(true)
    ((StandardJavadocDocletOptions)javadoc.options).noTimestamp(true)
    ((StandardJavadocDocletOptions)javadoc.options).use(true)
    ((StandardJavadocDocletOptions)javadoc.options).bottom("Copyright &#169; Eben Howard 2012&#x2013;2021. All rights reserved.")
    javadoc.destinationDir = file("../docs/$name/apidocs")

}

// Disable JDK 8's doclint
// http://blog.joda.org/2014/02/turning-off-doclint-in-jdk-8-javadoc.html
if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            // The -quiet is because of some sort of weird JDK JavaCompiler bug:
            // https://discuss.gradle.org/t/passing-arguments-to-compiler-and-javadoc/1661
            options.addStringOption('Xdoclint:none,-missing', '-quiet')
            options.tags('apiNote:a:"API Note"', 'implSpec:a:"Implementation Requirements"', 'implNote:a:"Implementation Note"')
        }
    }
}
if(JavaVersion.current().isJava9Compatible()) {
    allprojects {
        tasks.withType(JavaCompile) {
            options.release.set(8)
        }
    }
}
